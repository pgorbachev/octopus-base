package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2019_2.*
import jetbrains.buildServer.configs.kotlin.v2019_2.BuildType
import jetbrains.buildServer.configs.kotlin.v2019_2.buildFeatures.XmlReport
import jetbrains.buildServer.configs.kotlin.v2019_2.buildFeatures.commitStatusPublisher
import jetbrains.buildServer.configs.kotlin.v2019_2.buildFeatures.dockerSupport
import jetbrains.buildServer.configs.kotlin.v2019_2.buildFeatures.xmlReport
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.gradle
import jetbrains.buildServer.configs.kotlin.v2019_2.triggers.ScheduleTrigger
import jetbrains.buildServer.configs.kotlin.v2019_2.triggers.schedule
import jetbrains.buildServer.configs.kotlin.v2019_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, create a buildType with absolute id = 'ReleaseManagement_OctopusExternalSystemClient_10CompileUtAuto'
in the project with absolute id = 'ReleaseManagement_OctopusExternalSystemClient', and delete the patch script.
*/
create(AbsoluteId("ReleaseManagement_OctopusExternalSystemClient"), BuildType({
    templates(AbsoluteId("CDCompileUTGradle"))
    id = AbsoluteId("ReleaseManagement_OctopusExternalSystemClient_10CompileUtAuto")
    name = "[1.0] Compile & UT [AUTO]"

    params {
        param("GRADLE_EXTRA_PARAMETERS", "-P docker.registry=%DOCKER_REGISTRY% -P bitbucket.license=%BITBUCKET_SETUP_LICENSE%")
        param("GRADLE_TASK", "build")
        param("JDK_VERSION", "11")
        param("TEST_COVERAGE_PATTERN", "com.openwaygroup.*")
        param("BB_OP_PUBLISHER_USER", "s-teamcity-publisher")
        param("CURRENT_COMMIT", "")
        param("WORK_DIR", "%teamcity.build.checkoutDir%")
        param("TEST_EXCLUDE_COVERAGE_PATTERN", "")
        param("VERSION_TAG", "")
        param("system.TEAMCITY_BUILDCONF_NAME", "%env.TEAMCITY_BUILDCONF_NAME%")
        param("system.TEAMCITY_PROJECT_NAME", "%env.TEAMCITY_PROJECT_NAME%")
        param("env.ANT_HOME", "%env.BUILD_ENV%/ANT/LATEST")
    }

    vcs {
        root(AbsoluteId("ReleaseManagement_OctopusExternalSystemClient_ReleaseManagementBitbucketClientVcsRoot"))

        checkoutMode = CheckoutMode.ON_AGENT
        showDependenciesChanges = true
    }

    steps {
        step {
            name = "Octopus calculate build version"
            id = "RUNNER_4201"
            type = "OctopusCalculateBuildParameters"
            executionMode = BuildStep.ExecutionMode.DEFAULT
            param("CURRENT_COMMIT", "%CURRENT_COMMIT%")
            param("PROJECT_VERSION", "%PROJECT_VERSION%")
        }
        gradle {
            name = "Build & Publish to Artifactory"
            id = "RUNNER_2384"
            tasks = "%GRADLE_TASK%"
            workingDir = "%WORK_DIR%"
            gradleHome = "%env.BUILD_ENV%/GRADLE/%GRADLE_VERSION%"
            gradleParams = """
                --info
                %GRADLE_STANDARD_PARAMETERS%
                %GRADLE_EXTRA_PARAMETERS%
            """.trimIndent()
            enableStacktrace = true
            jdkHome = "%env.JAVA_HOME%"
            jvmArgs = """
                -Duser.name=%teamcity.agent.jvm.user.name% -Duser.home=%teamcity.agent.jvm.user.home%
                %JAVA_OPTS%
            """.trimIndent()
            param("org.jfrog.artifactory.selectedDeployableServer.defaultModuleVersionConfiguration", "GLOBAL")
        }
        stepsOrder = arrayListOf("RUNNER_275", "RUNNER_2383", "RUNNER_4201", "RUNNER_2473", "RUNNER_880", "RUNNER_2384", "RUNNER_2987", "RUNNER_860")
    }

    triggers {
        schedule {
            id = "TRIGGER_116"
            schedulingPolicy = weekly {
                dayOfWeek = ScheduleTrigger.DAY.Saturday
                hour = 21
                minute = 35
            }
            branchFilter = ""
            triggerBuild = always()
            withPendingChangesOnly = false

            enforceCleanCheckout = true
        }
    }

    failureConditions {
        executionTimeoutMin = 120
    }

    features {
        xmlReport {
            id = "BUILD_EXT_16"
            reportType = XmlReport.XmlReportType.FINDBUGS
            rules = """
                target/findbugsXml.xml 
                **/target/findbugsXml.xml
            """.trimIndent()
            verbose = true
        }
        xmlReport {
            id = "BUILD_EXT_26"
            reportType = XmlReport.XmlReportType.PMD
            rules = """
                **/target/pmd.xml
                target/pmd.xml
            """.trimIndent()
            verbose = true
        }
        xmlReport {
            id = "BUILD_EXT_30"
            reportType = XmlReport.XmlReportType.PMD_CPD
            rules = """
                **/target/cpd.xml
                target/cpd.xml
            """.trimIndent()
            verbose = true
        }
        xmlReport {
            id = "BUILD_EXT_72"
            reportType = XmlReport.XmlReportType.CHECKSTYLE
            rules = """
                **/target/checkstyle-result.xml
                target/checkstyle-result.xml
            """.trimIndent()
            verbose = true
        }
        dockerSupport {
            id = "DockerSupport"
            loginToRegistry = on {
                dockerRegistryId = "PROJECT_EXT_177"
            }
        }
        commitStatusPublisher {
            id = "BUILD_EXT_375"
            vcsRootExtId = "ReleaseManagement_OctopusExternalSystemClient_ReleaseManagementBitbucketClientVcsRoot"
            publisher = bitbucketServer {
                url = "https://bitbucket.spb.openwaygroup.com/"
                userName = "%BB_OP_PUBLISHER_USER%"
                password = "credentialsJSON:ea3e02f8-e3d3-444e-a3ea-1c0addc3b75c"
            }
        }
    }

    requirements {
        contains("env.OS_TYPE", "CENTOS7x64", "RQ_1895")
    }
    
    disableSettings("RUNNER_2383", "RUNNER_2473", "RUNNER_2987", "RUNNER_860")
}))

