package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2019_2.*
import jetbrains.buildServer.configs.kotlin.v2019_2.BuildType
import jetbrains.buildServer.configs.kotlin.v2019_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, create a buildType with absolute id = 'ReleaseManagement_OctopusExternalSystemClient_21Release'
in the project with absolute id = 'ReleaseManagement_OctopusExternalSystemClient', and delete the patch script.
*/
create(AbsoluteId("ReleaseManagement_OctopusExternalSystemClient"), BuildType({
    id = AbsoluteId("ReleaseManagement_OctopusExternalSystemClient_21Release")
    name = "[2.0] Release"
    description = "Call an outpatient process."

    buildNumberPattern = "%dep.RnDProcessesAutomation_BaseServices_EmployeeService_Octopus_10CompileUtAuto.BUILD_NUMBER_FORMAT%"

    params {
        param("LABELING_PATTERN", "v%dep.ReleaseManagement_OctopusExternalSystemClient_10CompileUtAuto.PROJECT_VERSION%")
        param("CURRENT_COMMIT", "%dep.ReleaseManagement_OctopusExternalSystemClient_10CompileUtAuto.CURRENT_COMMIT%")
        param("OCTOPUS_REPOSITORY_NAME", "octopus-external-systems-client")
        param("env.OCTOPUS_GITHUB_TOKEN", "%OCTOPUS_GITHUB_TOKEN%")
        param("dep.RnDProcessesAutomation_BaseServices_EmployeeService_Octopus_10CompileUtAuto.BUILD_NUMBER_FORMAT", "%PROJECT_VERSION%.%build.counter%")
    }

    steps {
        step {
            name = "Call a github action"
            type = "OctopusCallGitHubAction"
            executionMode = BuildStep.ExecutionMode.DEFAULT
            param("CURRENT_COMMIT", "%CURRENT_COMMIT%")
            param("OCTOPUS_GITHUB_TOKEN", "%env.OCTOPUS_GITHUB_TOKEN%")
            param("PROJECT_VERSION", "%dep.ReleaseManagement_OctopusExternalSystemClient_10CompileUtAuto.PROJECT_VERSION%")
            param("OCTOPUS_REPOSITORY_NAME", "%OCTOPUS_REPOSITORY_NAME%")
        }
    }

    dependencies {
        snapshot(AbsoluteId("ReleaseManagement_OctopusExternalSystemClient_10CompileUtAuto")) {
        }
    }
}))

